#!/bin/sh

# Slackware build script for nvidia-driver-bumblebee

# Copyright 2007-2011 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Thanks to Robby Workman for suggestions to improve this script.
#
# ChangeLog
# ------------------------------------------------------------------------------
# 1.0	20-MAR-2011	New Maintainer: Edward W. Koenig <kingbeowulf@gmail.com>
# 1.1	10-APR-2011	updated to new version, testing 13.37rc4.6692
# 1.2   27-MAY-2011	new version, allow multilib option, minor edits
# 1.2.1 20-JUNE-2011	minor edits, thanks to Robby and Roberto
# 1.5	01-JULY-2011	new version, single driver download, add switch to select 
#			pure x86_64 or x86_64 with 32-bit compatibility.
# 1.6	27-AUG-2011	version bump, minor edits
# 1.7	21-OCT-2011	version bump
# 1.8   24-MAR-2012	version bump, fix to nvidia-switch thanks to Phill W.

# This version has been modified by Ben Mendis <ben.mendis@gmail.com> to work
# with bumblebee on systems that have NVIDIA Optimus hardware.

PRGNAM=nvidia-driver-bumblebee
VERSION=295.33
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  TARGET="x86_64"
 LIBDIRSUFFIX="64"
# Set 32-bit compatibility flag default
  COMPAT32=${COMPAT32:-no}
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

SRCNAM=NVIDIA-Linux-$TARGET-${VERSION}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf nvidia-installer-$VERSION
tar xvf $CWD/nvidia-installer-$VERSION.tar.bz2
rm -rf nvidia-settings-$VERSION
tar xvf $CWD/nvidia-settings-$VERSION.tar.bz2
rm -rf nvidia-xconfig-$VERSION
tar xvf $CWD/nvidia-xconfig-$VERSION.tar.bz2
rm -rf $SRCNAM
sh $CWD/$SRCNAM.run --extract-only
cd $SRCNAM
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers \
  $PKG/etc/OpenCL/vendors/ $PKG/usr/lib$LIBDIRSUFFIX/{tls,vdpau} \
  $PKG/usr/{bin,man/man1,sbin} $PKG/usr/share/{applications,pixmaps} \
  $PKG/usr/lib$LIBDIRSUFFIX/bumblebee/xorg/modules/extensions

install -m 755 nvidia_drv.so $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers/
install -m 755 libglx.so.$VERSION \
  $PKG/usr/lib$LIBDIRSUFFIX/bumblebee/xorg/modules/extensions/libglx.so.$VERSION
install -m 755 libGL.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/bumblebee/libGL.so.$VERSION
install -m 755 libGL.la $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libOpenCL.so.1.0.0 $PKG/usr/lib$LIBDIRSUFFIX/
install -m 444 libXvMCNVIDIA.a $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libXvMCNVIDIA.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libvdpau_nvidia.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/vdpau/
install -m 755 libcuda.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-glcore.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-wfb.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/
install -m 755 libnvidia-cfg.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-ml.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvcuvid.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-compiler.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 644 nvidia.icd $PKG/etc/OpenCL/vendors/
install -m 755 tls/libnvidia-tls.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/tls/

# Optional 32-bit support; NOTE! nvidia-switch does not operate here.
if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  mkdir -p $PKG/usr/lib/{tls,vdpau,bumblebee}

  install -m 755 32/libGL.so.$VERSION $PKG/usr/lib/bumblebee
  install -m 755 32/libGL.la $PKG/usr/lib/
  install -m 755 32/libnvidia-glcore.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libvdpau_nvidia.so.$VERSION $PKG/usr/lib/vdpau/
  install -m 755 32/libcuda.so.$VERSION $PKG/usr/lib/
  install -m 755 32/tls/libnvidia-tls.so.$VERSION $PKG/usr/lib/tls/
  install -m 755 32/libOpenCL.so.1.0.0 $PKG/usr/lib/
  install -m 755 32/libnvidia-compiler.so.$VERSION $PKG/usr/lib/
fi

# Next come the apps
for i in nvidia-smi nvidia-bug-report.sh; do
  install -m 755 $i $PKG/usr/bin/
done

install -m 644 nvidia-smi.1.gz $PKG/usr/man/man1/

# symlinks
cd $PKG/usr/lib$LIBDIRSUFFIX
  for i in libcuda libnvidia-cfg; do
    ln -s $i.so.$VERSION $i.so.1
    ln -s $i.so.1 $i.so
  done
  ln -sf libXvMCNVIDIA.so.$VERSION libXvMCNVIDIA_dynamic.so.1
  ln -sf libXvMCNVIDIA.so.$VERSION libXvMCNVIDIA_dynamic.so
  ln -sf libOpenCL.so.1.0.0 libOpenCL.so.1.0
  ln -sf libOpenCL.so.1.0 libOpenCL.so.1
  ln -sf libOpenCL.so.1 libOpenCL.so
  ln -sf libnvcuvid.so.$VERSION libnvcuvid.so.1
  ln -sf libnvcuvidv.so.$VERSION libnvcuvid.so
  ln -sf tls/libnvidia-tls.so.$VERSION libnvidia-tls.so.$VERSION
cd -

cd $PKG/usr/lib$LIBDIRSUFFIX/bumblebee
  ln -sf libGL.so.$VERSION libGL.so.1
  ln -sf libGL.so.$VERSION libGL.so
cd -

cd $PKG/usr/lib$LIBDIRSUFFIX/vdpau
  ln -sf libvdpau_nvidia.so.$VERSION libvdpau_nvidia.so
  ln -sf libvdpau_nvidia.so.$VERSION libvdpau_nvidia.so.1
cd -

cd $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules
  ln -sf libnvidia-wfb.so.$VERSION libnvidia-wfb.so.1
cd -

cd $PKG/usr/lib$LIBDIRSUFFIX/bumblebee/xorg/modules/extensions
  ln -sf libglx.so.$VERSION libglx.so
cd -

# symlinks for optional 32-bit support
if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  cd $PKG/usr/lib
    ln -sf libcuda.so.$VERSION libcuda.so.1
    ln -sf libcuda.so.1 libcuda.so
    ln -sf libOpenCL.so.1.0.0 libOpenCL.so.1.0
    ln -sf libOpenCL.so.1.0 libOpenCL.so.1
    ln -sf libOpenCL.so.1 libOpenCL.so
    ln -sf tls/libnvidia-tls.so.$VERSION libnvidia-tls.so.$VERSION
  cd -
  cd $PKG/usr/lib/bumblebee
    ln -sf libGL.so.$VERSION libGL.so.1
    ln -sf libGL.so.1 libGL.so
  cd -
fi

# Compiling nvidia-installer from source
cd $TMP/nvidia-installer-$VERSION
  chown -R root:root .
  chmod -R u+w,go+r-w,a-s .

  CFLAGS="$SLKCFLAGS" \
  LDFLAGS="-lz" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-installer $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-installer.1.gz $PKG/usr/man/man1/
cd -

# Compiling nvidia-settings from source
cd $TMP/nvidia-settings-$VERSION
  chown -R root:root .
  chmod -R u+w,go+r-w,a-s .

  cd src/libXNVCtrl
    make clean
    CFLAGS="$SLKCFLAGS" \
    make
  cd ../../

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-settings $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-settings.1.gz $PKG/usr/man/man1/
  install -m 644 doc/nvidia-settings.desktop $PKG/usr/share/applications/
  install -m 644 doc/nvidia-settings.png $PKG/usr/share/pixmaps/
cd ../

# Compiling nvidia-xconfig from source
cd $TMP/nvidia-xconfig-$VERSION
  chown -R root:root .
  chmod -R u+w,go+r-w,a-s .

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-xconfig $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-xconfig.1.gz $PKG/usr/man/man1/
cd -

# These correct wrong paths
sed -i "s|__LIBGL_PATH__|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|/usr/X11R6/lib|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|__UTILS_PATH__|/usr/bin|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__PIXMAP_PATH__|/usr/share/pixmaps|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__NVIDIA_SETTINGS_DESKTOP_CATEGORIES__|Application;Settings;|" \
  $PKG/usr/share/applications/nvidia-settings.desktop

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cd $TMP/$SRCNAM
cp -a LICENSE NVIDIA_Changelog README.txt html $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README.Slackware
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
sed "s/PKGVERSION/$VERSION/g" $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$TARGET-$BUILD$TAG.${PKGTYPE:-tgz}
